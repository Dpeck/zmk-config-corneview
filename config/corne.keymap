/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "balanced";
    require-prior-idle-ms = <150>;
    tapping-term-ms = <280>;
    hold-trigger-on-release;
    quick-tap-ms = <175>;
};

/ {
    combos {
        compatible = "zmk,combos";

        ctrlaltdlt {
            bindings = <&kp LC(LA(DEL))>;
            key-positions = <36 41>;
        };

        Snipping {
            bindings = <&mt LG(LS(S)) LS(S)>;
            key-positions = <24 13>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | ESC  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |      |
            //                    | CTL | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE               &kp Q  &kp W  &kp E        &kp R        &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp TAB                  &kp A  &kp S  &kp D        &kp F        &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&mt CAPSLOCK LEFT_SHIFT  &kp Z  &kp X  &mt LC(C) C  &mt LC(V) V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp LMETA
                                       &kp LCTRL    &mo 1        &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // |      | LFT | DWN | UP  | RGT | PGU |   |     |     |     |     |     |      |
            // | SHFT | BTP | BTN | CPY | PST | PGD |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none   &kp N1  &kp N2  &kp N3    &kp N4  &kp N5       &kp N6   &kp N7  &kp N8    &kp N9  &kp N0  &kp BSPC
&trans  &trans  &trans  &trans    &trans  &trans       &trans   &trans  &trans    &trans  &trans  &trans
&none   &trans  &trans  &trans    &trans  &trans       &trans   &trans  &trans    &trans  &trans  &trans
                        &kp LGUI  &trans  &kp SPACE    &kp RET  &trans  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp EXCL    &kp AT      &kp HASH   &kp DLLR   &kp PRCNT        &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&none  &kp LEFT    &kp DOWN    &kp UP     &kp RIGHT  &kp PAGE_UP      &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&none  &bt BT_PRV  &bt BT_NXT  &kp LC(C)  &kp LC(V)  &kp PAGE_DOWN    &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                               &kp LGUI   &trans     &kp SPACE        &kp RET    &trans     &kp RALT
            >;
        };
    };
};
